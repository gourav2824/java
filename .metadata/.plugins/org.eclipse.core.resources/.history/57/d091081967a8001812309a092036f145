import java.util.Scanner;

public class OctalAddition {

	public static void main(String[] args) {
		
		Scanner sc = new Scanner(System.in);
		System.out.print("Enter the Octal Number : ");
		int n = sc.nextInt();
//		System.out.print("Enter the First Number : ");
//		int n1 = sc.nextInt();
//		System.out.print("Enter the Second Number : ");
//		int n2 = sc.nextInt();
//		int a, b, da, db, sum=0, add, digit, power=1, carry=0;
		
//		a = n1;
//		b = n2;
//		while((a!=0) || (b!=0) || (carry!=0))
//		{
//			da = a % 10;
//			db = b % 10;
//			a = a / 10;
//			b = b / 10;
//			
//			add = da + db + carry;
//			
//			digit = add % 8;
//			carry = add / 8;
//			
//			sum += digit * power;
//			power = power * 10;
//		}
//		
//		System.out.print("Sum = " + sum);
		
		//Subtraction(n1, n2);
		OctalToBinary(n);
	}
	
	private static void Subtraction(int n1, int n2)
	{
		int a, b, da, db, sum=0, power=1, borrow=0, digit;
		
		a = n1;
		b = n2;
		while((a!=0) || (b!=0))
		{
			da = a % 10;
			db = b % 10;
			a = a / 10;
			b = b / 10;
			da = da + borrow;
			
			if(da < db)
			{
				borrow = -1;
				da += 8;
			}
			else
			{
				borrow = 0;
			}
			
			digit = da - db;
			sum += digit * power;
			power = power * 10;
		}
		
		System.out.print("Difference = " + sum);
	}
	
	private static void OctalToBinary(int n)
	{
		int power=1, sum=0;
		int a = n;
		while(a!=0)
		{
			int digit = a % 10;
			a = a / 10;
			
			int term = OtoB(digit);
			sum += term * power;
			power = power * 1000;
		}
		System.out.print("Binary Number = " + sum);
	}
	
	private static int OtoB(int n)
	{
		switch(n)
		{
		case 0: return 000;
		case 1: return 001;
		case 2: return 010;
		case 3: return 011;
		case 4: return 100;
		case 5: return 101;
		case 6: return 110;
		case 7: return 111;
		default: return 0;
		}
	}

}
